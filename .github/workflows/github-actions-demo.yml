name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions
on: [push]
  #push:
  #  branches-ignore:
  #    - 'main'
jobs:
  Pylint:
    runs-on: ubuntu-latest
    continue-on-error: true # To remove
    steps:
      - name: Check .editorconfig
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          cache: 'pip'
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
      - name: Check for hardcoded secrets
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install dependencies
        run: |
            pip install pylint black flake8
            npm install -g markdownlint-cli editorconfig-checker
            editorconfig-checker
      - name: Run unit tests
        run: |
            cd app
            python -m unittest discover -v
      - name: Lint Python code
        run: |
            find . -name '*.py' | xargs pylint
            black --check --diff .
            flake8 .
      - name: Check markdown files
        run: markdownlint-cli .
  docker-build:
    needs: Pylint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/u34:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/u34:latest
  trivy:
    needs: docker-build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/u34:${{ github.sha }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
  #snyk:
  #  #needs: Pylint
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/checkout@v2
  #    - name: Install Snyk dependencies
  #      run: pip install -r requirements.txt
  #    - name: Run Snyk to check for vulnerabilities
  #      uses: snyk/actions/python@master
  #      env:
  #        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  #      with:
  #        command: test
  #        args: --file=requirements.txt --severity-threshold=high #--all-projects --severity-threshold=high 
  sonarcloud:
    #needs: [Pylint, docker-build, image-scan]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
